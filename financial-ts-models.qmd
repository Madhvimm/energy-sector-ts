---
title: "Financial Time Series Models (ARCH/GARCH)"
output: distill::distill_article
---


```{r, warning=FALSE, message=FALSE, echo=FALSE}
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
library(gridExtra)
library(zoo)
library(astsa)
library(ggplot2)
library(zoo)
library(plotly)
library(vars)
library(dplyr)
library(quantmod)
library(FinTS)
library(gogarch)
```






# 1. Introduction


In this section of our project, we will analyze financial time series data related to key players in the energy market, specifically Exxon Mobil Corporation (XOM) and Chevron Corporation (CVX). These companies, pivotal in the global energy landscape, not only reflect the economic pulses of the oil industry but also provide insights into how shifts in energy policies and market dynamics influence significant economic indicators.

### Exxon Mobil Corporation and its Market Influence

Exxon Mobil, a titan in the oil industry, has been at the forefront of energy production and innovation. The company's activities span across the extraction, refining, and distribution of energy products, positioning it as a critical barometer for assessing the economic health and trends within the energy sector. By examining the financial time series of Exxon Mobil's stock prices, we aim to capture the volatility and market sentiment that underpin the broader economic implications of shifts in oil prices and energy policies.

### Chevron Corporation and its Economic Role

Similarly, Chevron, as a major competitor and another influential player in the oil market, offers a complementary perspective to the economic analysis of the energy sector. Chevron’s extensive operations in energy production and its strategic responses to global energy demands make its financial performance a valuable indicator of the sector's economic stability and growth. The analysis of Chevron’s stock price volatility will help us understand how energy market fluctuations and transitions toward renewable resources impact major energy corporations.


### Analytical Approach Using ARCH and GARCH Models

To conduct the time series analysis of financial data from Exxon Mobil and Chevron, we will utilize ARCH (Autoregressive Conditional Heteroskedasticity) and GARCH (Generalized Autoregressive Conditional Heteroskedasticity) models. These models are particularly effective for financial market data as they adeptly handle the inherent volatility typical of stock return data. By examining the volatility patterns in the stock prices of XOM and CVX, we aim to glean insights into how market dynamics, driven by both traditional and renewable energy sources, are shaping the economic narratives of these leading corporations.

In this detailed exploration, our objective is to uncover how historical and present economic conditions, policy shifts, and global energy crises influence the financial trajectories of key energy players. These insights will not only deepen our understanding of the energy sector's impact on global economics but also aid in formulating strategies for a sustainable energy future.



# 2. Plot the Data

To visually analyze the stock price trends of Exxon Mobil and Chevron Corporation, we will employ the quantmod package to fetch and plot the data. 

Graphical representations provide intuitive insights into the financial performance over time, highlighting trends, volatilities, and anomalies that might not be immediately apparent from raw data


::: panel-tabset

## Exxon Mobil

```{r, warning=FALSE, message=FALSE, echo=FALSE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false

# Retrieve stock price data for Exxon Mobil starting from 1990
Exxon_stockprice <- getSymbols("XOM", auto.assign = FALSE, from = "1990-01-01", src = "yahoo")

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


# Plot the stock prices
chartSeries(Exxon_stockprice, theme = chartTheme("white"),
            bar.type = "hlc",  
            up.col = "green",  
            dn.col = "red") 


```


The chart shows the stock price movement for Exxon Mobil Corporation from January 1990 to April 2024. The data, represented through a high-low-close (HLC) bar chart, shows trajectory of prices over more than three decades. A general uptrend can be observed in the late '90s, followed by increased volatility and several peaks and dips that suggest fluctuating market conditions through the 2000s and 2010s. The trading volume, in the histogram below the main price chart, offers a narrative on market sentiment, with spikes in volume  associated with changes in the industry. 



## Chevron Corporation



```{r, warning=FALSE, message=FALSE, echo=FALSE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false

# Retrieve stock price data for Chevron Corporation starting from 1990
Chevron_stockprice <- getSymbols("CVX", auto.assign = FALSE, from = "1990-01-01", src = "yahoo")

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


# Plot the stock prices
chartSeries(Chevron_stockprice, theme = chartTheme("white"),
            bar.type = "hlc",  
            up.col = "green",  
            dn.col = "red") 


```


The chart displays Chevron Corporation's stock prices from 1990 to April 2024, capturing significant ups and downs that reflect key changes in the energy industry and wider economic trends. The green and red bars indicates when prices went up or down each day. After a clear rise in prices until the late '90s, the stock experiences noticeable volatility, swinging up and down.

The histogram below the chart, which tracks trading volume, aligns with notable shifts in stock prices, suggesting times when investors were particularly active. This visualization lays the groundwork for a detailed examination of price volatility using ARCH/GARCH models, offering a visual summary of the market forces that have influenced Chevron's stock over the years.


:::





# 3. Fitting the Model

Now, we will move forward to fit an ARCH/GARCH model to the stock price data. The first step in this process is to prepare the time series by calculating the stock price returns, which are typically used in financial time series modeling because they are more likely to exhibit stationary properties—a key requirement for ARCH/GARCH models.


::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)

# Calculate log returns
returns_exxon <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_exxon))

```


From the summary statistics, we can clearly see that the mean return is close to zero, but with significant deviation. This is characteristic of financial data, where over long periods, the mean return tends to be small. This behavior of returns—small and steady on average, with occasional bursts of high variation—is precisely what ARCH/GARCH models aim to capture and quantify.



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


# Plot the returns
autoplot(returns_exxon, color="dodgerblue3") + 
  theme_minimal() +
  ggtitle("Exxon Mobil Stock Price Returns") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
```


The plot shows the daily returns on Exxon Mobil's stock from 1990 to 2024. The returns, calculated using logarithmic differences, fluctuate around zero, with spikes that indicate days of particularly high volatility. The distribution of returns is fairly symmetric, there is volatility clustering in the returns.




## Chevron Corporation


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

# Convert to a time series object
Chevron_ts <- ts(Chevron_stockprice$CVX.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)

# Calculate log returns
returns_chevron <- log(Chevron_ts)%>% diff()
knitr::kable(summary(returns_chevron))

```


The summary statistics for Chevron's returns highlight a median value slightly above zero, suggesting that half of the observed returns were positive over the long term. However, the minimum and maximum values point to significant swings in the stock's performance.



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

# Plot the returns
autoplot(returns_chevron, color="dodgerblue3") + 
  theme_minimal() +
  ggtitle("Chevron Stock Price Returns") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))


```


The plotted returns of Chevron's stock, similar to Exxon Mobil's, show clusters of volatility. These clusters where the spikes are denser indicate periods of heightened uncertainty or market activity. This pattern is a key feature that the forthcoming ARCH/GARCH analysis will aim to capture.



:::



# 4. ACF/PACF Plots

To further investigate the nature of the stock price returns and prepare for ARCH/GARCH modeling, it's essential to look at the autocorrelations. 

Autocorrelation Function (ACF) and Partial Autocorrelation Function (PACF) plots help us identify whether returns are influenced by their own past values (autocorrelation) and to what extent (partial autocorrelation). This step is key in determining the appropriate lag order for the ARCH/GARCH models.


## 4.1 Returns

::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

#ACF Plot for Exxon Mobil Stock
Exxon_acf <- ggAcf(returns_exxon,40) + 
  ggtitle("ACF Plot for Exxon Mobil Returns ") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

#PACF Plot for Exxon Mobil Stock
Exxon_pacf <- ggPacf(returns_exxon,40) + 
  ggtitle("PACF Plot for Exxon Mobil Returns") + 
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(Exxon_acf, Exxon_pacf, nrow = 2)
```


Upon examining the ACF and PACF plots we can see values quickly drop off and mostly lie within the significance bounds, the returns appear to be stationary. Possible q and p values would  be q = 0, 1, 2 and p = 0, 1, 2





## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


#ACF Plot for Chevron Stock
Chevron_acf <- ggAcf(returns_chevron,40) + 
  ggtitle("ACF Plot for Chevron Stock Returns") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

#PACF Plot for Chevron Stock
Chevron_pacf <- ggPacf(returns_chevron,40) + 
  ggtitle("PACF Plot for Chevron Stock Returns") + 
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(Chevron_acf, Chevron_pacf, nrow = 2)


```


Upon examining the ACF and PACF plots we can see values quickly drop off and mostly lie within the significance bounds, the returns appear to be stationary. Possible q and p values would be q = 0, 1 and p = 0, 1


:::


## 4.2 Absolute Returns

The ACF and PACF plots for the absolute returns give us insights into the nature of volatility in the stock's returns. When we analyze absolute returns, we're focusing on the magnitude of changes, regardless of direction, which can often reveal volatility patterns.


::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

#ACF Plot for Exxon Mobil Stock
Exxon_acf_abs <- ggAcf(abs(returns_exxon),lag.max=40) + 
  ggtitle("ACF Plot for Exxon Mobil Absolute Returns") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

#PACF Plot for Exxon Mobil Stock
Exxon_pacf_abs <- ggPacf(abs(returns_exxon),lag.max=40) + 
  ggtitle("PACF Plot for Exxon Mobil Absolute Returns") + 
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(Exxon_acf_abs, Exxon_pacf_abs, nrow = 2)


```


The ACF plot for the absolute returns shows significant autocorrelation across several lags, this indicates persistent volatility in the stock price returns. This is also indicative of the volatility clustering seen in financial time series.

The PACF plot shows significant correlations at the early lags (from 1 to 11, then at 17 and 18). After these initial lags, the correlations in the PACF plot decrease and generally stay within the confidence interval




## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

#ACF Plot for Chevron Stock
Chevron_acf_abs <- ggAcf(abs(returns_chevron),40) + 
  ggtitle("ACF Plot for Chevron Stock Absolute Returns") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

#PACF Plot for Chevron Stock
Chevron_pacf_abs <- ggPacf(abs(returns_chevron),40) + 
  ggtitle("PACF Plot for Chevron Stock Absolute Returns") + 
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(Chevron_acf_abs, Chevron_pacf_abs, nrow = 2)


```


The ACF plot for the absolute returns shows significant autocorrelation across all the lags, this indicates persistent volatility in the stock price returns. This is also indicative of the volatility clustering seen in financial time series.

The PACF plot shows significant correlations at the early lags (from 1 to 11). After these initial lags, the correlations in the PACF plot decrease and generally stay within the confidence interval


::: 



## 4.3 Squared Returns


Examining squared returns is a technique in time series analysis to assess volatility patterns. When returns are squared, patterns in volatility might become more evident, as periods of high volatility will result in higher squared returns. These patterns are crucial for ARCH/GARCH models.


::: panel-tabset


## Exxon Mobil

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

# ACF Plot for Exxon Mobil Squared Returns
Exxon_acf_se <- ggAcf(returns_exxon^2, lag.max=40) + 
  ggtitle("ACF Plot for Exxon Mobil Squared Returns") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

# PACF Plot for Exxon Mobil Squared Returns
Exxon_pacf_se <- ggPacf(returns_exxon^2, lag.max=40) + 
  ggtitle("PACF Plot for Exxon Mobil Squared Returns") + 
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

# Arrange the plots on a grid
grid.arrange(Exxon_acf_se, Exxon_pacf_se, nrow = 2)

```

The ACF plot for squared returns shows a much slower decay, indicating that volatility shocks have a long-lasting effect. The ACF plot here suggests that volatility shocks to Exxon Mobil's stock prices are persistent, with a high level of autocorrelation extending across many lags.

The PACF plot for squared returns, while also showing some significant lags, doesn't carry the same pattern of persistence as the ACF. 


This persistence of volatility as indicated by the squared returns ACF and PACF plots reinforces the need for a GARCH model in capturing the time-varying volatility in the stock returns


## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

#ACF Plot for Chevron Stock
Chevron_acf_se <- ggAcf(returns_chevron^2,40) + 
  ggtitle("ACF Plot for Chevron Stock Squared Returns") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

#PACF Plot for Chevron Stock
Chevron_pacf_se <- ggPacf(returns_chevron^2,40) + 
  ggtitle("PACF Plot for Chevron Stock Squared Returns") + 
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(Chevron_acf_se, Chevron_pacf_se, nrow = 2)

```


The ACF plot here suggests that volatility shocks are persistent, with a high level of autocorrelation.

The PACF plot for squared returns, while also showing some significant lags, doesn't carry the same pattern of persistence as the ACF. 


This persistence of volatility as indicated by the squared returns ACF and PACF plots reinforces the need for a GARCH model in capturing the time-varying volatility in the stock returns



::: 





# 5. ARCH Test


Before fitting an ARCH or GARCH model, it is important to formally test for the presence of ARCH effects that is, to test whether there are autoregressive conditional heteroskedasticity features in the time series data.


::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

# Conduct the ARCH test
ArchTest(returns_exxon, lags=1, demean=TRUE)


```

The result of the ARCH test indicates a Chi-squared statistic of 590.35 with 1 degree of freedom and a p-value less than 2.2e-16, which is extremely low. This leads us to reject the null hypothesis of no ARCH effects. There is very strong evidence of autoregressive conditional heteroskedasticity in the Exxon Mobil stock returns. 



## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

# Conduct the ARCH test
ArchTest(returns_chevron, lags=1, demean=TRUE)


```


The result of the ARCH test indicates a Chi-squared statistic of 260.57 with 1 degree of freedom and a p-value less than 2.2e-16, which is extremely low. This leads us to reject the null hypothesis of no ARCH effects. There is very strong evidence of autoregressive conditional heteroskedasticity.


:::


Given these results, it is appropriate to proceed with fitting an ARCH/GARCH model to the stock returns to better understand and predict the volatility patterns.



# 6. Fitting ARIMA model


When volatility clustering is present, as indicated by the ARCH test, it’s good practice to first model the mean of the time series. An ARIMA model helps in capturing the autocorrelation in the mean of the series. Once we've accounted for any autocorrelation in the mean with the ARIMA model, we can proceed to model the conditional variance (volatility) using GARCH models.


::: panel-tabset


## Exxon Mobil

To find the best ARIMA model, we search across different combinations of p (autoregressive terms), d (differencing terms), and 
q (moving average terms), and select the model with the lowest information criteria (AIC, BIC, and AICc).



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


ARIMA.c=function(p1,p2,q1,q2,data){
temp=c()
#d=1
i=1
temp= data.frame()
ls=matrix(rep(NA,6*18),nrow=18)


for (p in p1:p2)
{
  for(q in q1:q2)
  {
    for(d in 0:1)
    {
      
      if(p+d+q<=6)
      {
        
        model<- Arima(data,order=c(p,d,q))
        ls[i,]= c(p,d,q,model$aic,model$bic,model$aicc)
        i=i+1
      }
    }
  }
}



temp= as.data.frame(ls)
names(temp)= c("p","d","q","AIC","BIC","AICc")

temp
}

output <- ARIMA.c(0,2,0,2,data=returns_exxon) 
output

output[which.min(output$AIC),] 
output[which.min(output$BIC),] 
output[which.min(output$AICc),] 


```

The best ARIMA model according to the lowest AIC, BIC and AICC is ARIMA(1,0,1)


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

fit_exxon <- Arima(returns_exxon,order=c(1,0,1))
summary(fit_exxon)

```


The standard errors are relatively small compared to the coefficients, suggesting that the coefficients are likely to be significantly different from zero.







## Chevron Corporation

To find the best ARIMA model, we search across different combinations of p (autoregressive terms), d (differencing terms), and q (moving average terms), and select the model with the lowest information criteria (AIC, BIC, and AICc).


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true



ARIMA.c=function(p1,p2,q1,q2,data){
temp=c()
#d=1
i=1
temp= data.frame()
ls=matrix(rep(NA,6*18),nrow=18)


for (p in p1:p2)
{
  for(q in q1:q2)
  {
    for(d in 0:1)
    {
      
      if(p+d+q<=6)
      {
        
        model<- Arima(data,order=c(p,d,q))
        ls[i,]= c(p,d,q,model$aic,model$bic,model$aicc)
        i=i+1
  
        
      }
      
    }
  }
}


temp= as.data.frame(ls)
names(temp)= c("p","d","q","AIC","BIC","AICc")

temp
}

output <- ARIMA.c(0,2,0,2,data=returns_chevron) 
output

output[which.min(output$AIC),] 
output[which.min(output$BIC),] 
output[which.min(output$AICc),] 



```



The best ARIMA model according to the lowest AIC is ARIMA(0,0,1)



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


fit_chevron <- Arima(returns_chevron,order=c(0,0,1))
summary(fit_chevron)
```

The zero autocorrelation at the first lag (ACF1) of residuals indicates that the model is capturing the correlation in the data quite well.


:::



# 7. Analyising the Residuals

Now we will analyse the residual in depth, this step is crucial because any pattern left in the residuals can indicate that the model hasn’t fully captured the underlying process.

::: panel-tabset


## Exxon Mobil

After fitting an ARIMA(1,0,1) model to the Exxon Mobil returns, we need to analyze the residuals to ensure that the model has captured the data's structure adequately.


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


model_output_e <- capture.output(sarima(returns_exxon,1,0,1))
#model_output_e

cat(model_output_e[22:34], model_output_e[length(model_output_e)], sep = "\n") 


```

The Standardized Residuals plot does show some volatility left, just before 2000, between 2003 and 2004 and around 2010 to 2011. These spikes indicate that the ARIMA model may not have fully captured the variability during these periods.

The coefficient estimates and their corresponding standard errors, t-values, and p-values confirm the significance of the AR1 and MA1 terms.



Moving forward with the analysis, after fitting an ARIMA(1,0,1) model, we will now examine the autocorrelation in both the residuals and the squared residuals. This step is crucial as it helps us to understand the nature of the residuals and assess whether a GARCH model is necessary.



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


exxon.res<-fit_exxon$residuals

plot1 <- ggAcf(exxon.res, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
  
plot2<- ggPacf(exxon.res, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(plot1, plot2,nrow=2)
```

The autocorrelations appear to be within the confidence bands for most lags, suggesting there is no significant autocorrelation remaining in the residuals. Similarly, the PACF shows that the partial autocorrelations are also within the confidence bounds for most of the lags


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

plot3 <- ggAcf(exxon.res^2, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
  
plot4<- ggPacf(exxon.res^2, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(plot3, plot4,nrow=2)


```

The slow decay in autocorrelation across lags indicates that there is high volatility clustering. The PACF plot also shows some spikes at early lags, suggesting that there is some volatility.

These plots are indicative of conditional heteroskedasticity in the series, which is not captured by the ARIMA model. It is recommended to proceed with fitting a GARCH model. The significant ACF in the squared residuals indicates that a GARCH(1,1) model is appropriate.






## Chevron Corporation


After fitting an ARIMA(0,0,1) model to the Chevron returns, we need to analyze the residuals to ensure that the model has captured the data’s structure adequately. 


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


model_output_c <- capture.output(sarima(returns_chevron,0,0,1))

#model_output_c

cat(model_output_c[11:22], model_output_c[length(model_output_c)], sep = "\n") 

```

The Standardized Residuals plot does show some volatility left, around 2003, and then 2010 to 2012. These spikes indicate that the ARIMA model may not have fully captured the variability during these periods.

Both the coefficient estimates are significant.

Moving forward with the analysis, after fitting an ARIMA(0,0,1) model, we will now examine the autocorrelation in both the residuals and the squared residuals. This step is crucial as it helps us to understand the nature of the residuals and assess whether a GARCH model is necessary.




```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

chevron.res<-fit_chevron$residuals

plot5 <- ggAcf(chevron.res, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
  
plot6 <- ggPacf(chevron.res, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(plot5, plot6,nrow=2)
```

The autocorrelations appear to be within the confidence bands for most lags, suggesting there is no significant autocorrelation remaining in the residuals. Similarly, the PACF shows that the partial autocorrelations are also within the confidence bounds for most of the lags



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

plot7 <- ggAcf(chevron.res^2, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
  
plot8 <- ggPacf(chevron.res^2, 40) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

grid.arrange(plot7,plot8,nrow=2)


```

The slow decay in autocorrelation across lags indicates that there is high volatility clustering. The PACF plot also shows some spikes at early lags (from 1 to 9), suggesting that there is some volatility.

These plots are indicative of conditional heteroskedasticity in the series, which is not captured by the ARIMA model. It is recommended to proceed with fitting a GARCH model. The significant ACF in the squared residuals indicates that a GARCH(1,1) model is appropriate.



:::



# 8. Method 1: GARCH Model on ARIMA Residuals


After determining the presence of conditional heteroskedasticity in the residuals of the ARIMA model, we proceed with fitting a GARCH model. The GARCH model is designed to model the volatility clustering evident in financial time series, allowing for more accurate forecasting of risk and volatility.

::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

model <- list() 
cc <- 1
for (p in 1:9) {
  for (q in 1:9) {
    suppressWarnings({
      model[[cc]] <- garch(exxon.res, order=c(p,q), trace=F)
    })
    cc <- cc + 1
  }
} 

## get AIC values for model evaluation
GARCH_AIC <- sapply(model, AIC) ## model with lowest AIC is the best
which(GARCH_AIC == min(GARCH_AIC))

model[[which(GARCH_AIC == min(GARCH_AIC))]]

```


The model with the lowest AIC appears to be a GARCH (1,1). Now lets fit GARCH (1,1)


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

#Fit the GARCH(1,1) model on the residuals
garch_fit_exxon <- garchFit(~garch(1, 1), data = exxon.res, trace = F)

#Summary of the fitted GARCH model
summary(garch_fit_exxon)

```

All coefficients (omega, alpha1, beta1) are highly significant. This implies that the GARCH(1,1) model captures the volatility clustering effectively.

The best model according to method 1 is ARIMA(1,0,1) + GARCH(1,1).




## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

model <- list() 
cc <- 1
for (p in 1:9) {
  for (q in 1:9) {
    suppressWarnings({
      model[[cc]] <- garch(chevron.res, order=c(p,q), trace=F)
    })
    cc <- cc + 1
  }
} 

## get AIC values for model evaluation
GARCH_AIC <- sapply(model, AIC) ## model with lowest AIC is the best
which(GARCH_AIC == min(GARCH_AIC))

model[[which(GARCH_AIC == min(GARCH_AIC))]]


```
The model with the lowest AIC appears to be a GARCH (1,1). Now lets fit GARCH (1,1)


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


#Fit the GARCH(1,1) model on the residuals
garch_fit_chevron <- garchFit(~garch(1, 1), data = chevron.res, trace = F)

#Summary of the fitted GARCH model
summary(garch_fit_chevron)
```

All coefficients (omega, alpha1, beta1) are highly significant, with very small p-values. This implies that the GARCH(1,1) model captures the volatility clustering effectively. The high log likelihood suggest that the model is a good fit. 

The GARCH(1,1) model effectively captures the conditional heteroscedasticity of Chevron’s stock returns.

The best model according to method 1 is ARIMA(0,0,1) + GARCH(1,1).


:::


# 9. Method 2: GARCH Model

The GARCH model is designed to model the volatility clustering evident in financial time series, allowing for more accurate forecasting of risk and volatility. Here we will fit the model on the returns


::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

model <- list() 
cc <- 1
for (p in 1:9) {
  for (q in 1:9) {
    suppressWarnings({
      model[[cc]] <- garch(returns_exxon, order=c(p,q), trace=F)
    })
    cc <- cc + 1
  }
} 

## get AIC values for model evaluation
GARCH_AIC <- sapply(model, AIC) ## model with lowest AIC is the best
which(GARCH_AIC == min(GARCH_AIC))


```



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

model[[which(GARCH_AIC == min(GARCH_AIC))]]

```

GARCH(1,1) model has the lowest AIC.


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

garch_fit_returns_exxon <- garchFit(~garch(1,1), data = returns_exxon, trace = F)
summary(garch_fit_returns_exxon)

```


All parameters in the model are statistically significant, as indicated by the p-values being less than 0.05. 

Thus for method 2 fitting GARCH(1,1) model directly to the returns of Exxon Mobil is the best model.





## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

model <- list() 
cc <- 1
for (p in 1:9) {
  for (q in 1:9) {
    suppressWarnings({
      model[[cc]] <- garch(returns_chevron, order=c(p,q), trace=F)
    })
    cc <- cc + 1
  }
} 

## get AIC values for model evaluation
GARCH_AIC <- sapply(model, AIC) ## model with lowest AIC is the best
which(GARCH_AIC == min(GARCH_AIC))

model[[which(GARCH_AIC == min(GARCH_AIC))]]


```

GARCH(1,1) model has the lowest AIC.


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


garch_fit_returns_chevron <- garchFit(~garch(1,1), data = returns_chevron, trace = F)
summary(garch_fit_returns_chevron)

```

All parameters in the model are statistically significant, as indicated by the p-values being less than 0.05. The significant mu, omega, alpha, and beta parameters ensure that the model not only captures the average price movements but also effectively models the observed volatility patterns. 

The GARCH(1,1) model, applied directly to the returns, appears to be the optimal model.





:::



# 10. Model Diagnostics

Now lets do Model Diagnostics for both the models selected in Method 1 and Method 2 above


::: panel-tabset


## Exxon Mobil


### Method 1: ARIMA(1,0,1) + GARCH(1,1)


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

summary(fit_exxon)

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

garch_exxon <- garchFit(~garch(1,1), exxon.res,trace = F)
summary(garch_exxon)

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

summary(garch(exxon.res, order = c(1,1),trace = F))

```





```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

checkresiduals(garch(exxon.res, order = c(1,1),trace = F))

```

The residuals do not show any obvious trends or seasonality, which suggests that the ARIMA model has captured the linear structure of the data. However, there are some visible outliers. Residuals are normally distributed, which supports one of the underlying assumptions of the ARIMA model.

The Ljung-Box test on residuals with a p-value of 0.1078 suggests that there is no significant autocorrelation in the residuals. This implies that the model residuals are random.

The coefficients of the GARCH(1,1) model are all statistically significant.


### Method 2: GARCH(1,1)


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


garch_returns_exxon1 <- garch(returns_exxon, order = c(1,1), trace = F)
summary(garch_returns_exxon1)
```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


checkresiduals(garch_returns_exxon1)

```

The estimated GARCH(1,1) model coefficients are statistically significant. 

The p-value from the Ljung-Box test suggests that there's no significant autocorrelation in the residuals. 



## Chevron Corporation


### Method 1: ARIMA(0,0,1) + GARCH(1,1)




```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

summary(fit_chevron)


```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

garch_chevron <- garchFit(~garch(1,1), chevron.res,trace = F)
summary(garch_chevron)

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


summary(garch(chevron.res, order = c(1,1),trace = F))

```



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


checkresiduals(garch(chevron.res, order = c(1,1),trace = F))

```

The residuals do not show any obvious trends or seasonality, which suggests that the ARIMA model has captured the linear structure of the data. 

The Ljung-Box test on residuals with a p-value of 0.1156 suggests that there is no significant autocorrelation in the residuals. This implies that the model residuals are random.

The coefficients of the GARCH(1,1) model are all statistically significant.

The diagnostic checks on the ARIMA(0,0,1) + GARCH(1,1) model reveal that the residuals do not show significant trends or seasonality. The GARCH model's significant coefficients for omega, alpha, and beta confirm its efficacy in capturing the stock's volatility clustering. The absence of autocorrelation in the residuals post-modelling further validates the model fit.



### Method 2: GARCH(1,1)


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


garch_returns_chevron1 <- garch(returns_chevron, order = c(1,1), trace = F)
summary(garch_returns_chevron1)

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

checkresiduals(garch_returns_chevron1)


```


The estimated GARCH(1,1) model coefficients are statistically significant.

The p-value from the Ljung-Box test suggests that there’s no significant autocorrelation in the residuals.


:::



# 11. Cross-Validation

Cross-validation is an essential technique in model validation, which helps to ensure that the results of our time series analysis generalize to independent data sets. Now lets do cross-validation, I have employed a rolling forecasting methodology to to validate both the models selected above.



::: panel-tabset


## Exxon Mobil



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

k <- 900
n <- length(returns_exxon)

err1 <- c()
err2 <- c()

for(i in 1:(n-k)) {
  xtrain <- returns_exxon[1:(k-1)+i]
  xtest <- returns_exxon[k+i]
  
  # ARIMA(1,0,1) + GARCH(1,1)
  arima.fit <- Arima(xtrain, order = c(1, 0, 1), include.drift = TRUE)
  arima.res <- residuals(arima.fit)
  fit1 <- garchFit(~garch(1, 1), data = arima.res, trace = FALSE)
  fcast1 <- predict(fit1, n.ahead = 1)
  
  # GARCH(1,1)
  returns_diff <- diff(xtrain)  
  fit2 <- garchFit(~garch(1, 1), data = xtrain, trace = FALSE)
  fcast2 <- predict(fit2, n.ahead = 1)
  
  err1 <- c(err1, (fcast1$meanForecast - xtest)^2)
  err2 <- c(err2, (fcast2$meanForecast - xtest)^2)
}

RMSE1 <- sqrt(mean(err1))
RMSE2 <- sqrt(mean(err2))

```


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


cat("The RMSE for model 1 -", RMSE1, "\n")
cat("The RMSE for model 2 -", RMSE2, "\n")

```



After performing cross-validation, we can see that Model 1 had slighlty lowest RMSE. Therefore, the best model according to diagnostics is Model 1: ARIMA(1,0,1) + GARCH(1,1)



## Chevron Corporation


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

k <- 900
n <- length(returns_chevron)

err1 <- c()
err2 <- c()

for(i in 1:(n-k)) {
  xtrain <- returns_chevron[1:(k-1)+i]
  xtest <- returns_chevron[k+i]
  
  # ARIMA(0,0,1) + GARCH(1,1)
  arima.fit <- Arima(xtrain, order = c(0, 0, 1), include.drift = TRUE)
  arima.res <- residuals(arima.fit)
  fit1 <- garchFit(~garch(1, 1), data = arima.res, trace = FALSE)
  fcast1 <- predict(fit1, n.ahead = 1)
  
  # GARCH(1,1)
  returns_diff <- diff(xtrain)  
  fit2 <- garchFit(~garch(1, 1), data = xtrain, trace = FALSE)
  fcast2 <- predict(fit2, n.ahead = 1)
  
  err1 <- c(err1, (fcast1$meanForecast - xtest)^2)
  err2 <- c(err2, (fcast2$meanForecast - xtest)^2)
}

RMSE1_c <- sqrt(mean(err1))
RMSE2_c <- sqrt(mean(err2))



```



```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true

cat("The RMSE for model 1 -", RMSE1_c, "\n")
cat("The RMSE for model 2 -", RMSE2_c, "\n")

```



After performing cross-validation, we can see both models perform comparablybut Model 1 had slighlty lowest RMSE. Therefore, the best model according to diagnostics is Model 1: ARIMA(0,0,1) + GARCH(1,1)



:::



# 12. Final Model

Now I will fit the model with best performance 


::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


#Fit the ARIMA model
arima_exxon_final <- Arima(returns_exxon, order = c(1, 0, 1))

#Extract the residuals
residuals_exxon_final <- residuals(arima_exxon_final)

# Fit the GARCH model on the residuals
garch_exxon_final <- garchFit(~garch(1,1), data = residuals_exxon_final, trace = FALSE)


summary(garch_exxon_final)


```


- All the coefficients are significant
- The log likelihood of the model is 24997.66, suggesting a very good fit to the data.
- The information criteria values (AIC, BIC, SIC, HQIC) are extremely low.
- Ljung-Box Tests on Residuals and Squared Residuals: These indicate some autocorrelation in residuals

The ARIMA(1,0,1) + GARCH(1,1) effectively captures the volatility dynamics in Exxon Mobil’s stock returns.


## Chevron Corporation


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


#Fit the ARIMA model
arima_chevron_final <- Arima(returns_chevron, order = c(0, 0, 1))

#Extract the residuals
residuals_chevron_final <- residuals(arima_chevron_final)

# Fit the GARCH model on the residuals
garch_chevron_final <- garchFit(~garch(1,1), data = residuals_chevron_final, trace = FALSE)


summary(garch_chevron_final)


```


  - All the coefficients are significant
  - The log likelihood of the model is 24533.25, suggesting a very good fit to the data.
  - Ljung-Box Tests on Residuals and Squared Residuals: 
      -   For Residuals: The low p-values in earlier lags suggest significant autocorrelation
      -   For Squared Residuals: The higher p-values in the squared residuals suggest less evidence of autocorrelation in the                 volatility


The ARIMA(0,0,1) + GARCH(1,1) effectively captures the volatility dynamics as evidenced by the significant coefficients for all model parameters.



:::



# 13. Forecasting with the Final Model

Now I would use the final model to forecast the future trends



::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


predict(garch_exxon_final, n.ahead = 100, plot = TRUE)

```

Future will be similar but with higher uncertainty because of the bigger confidence intervals.




## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


predict(garch_chevron_final, n.ahead = 100, plot = TRUE)


```

The forecast plot, based on the ARIMA(0,0,1) + GARCH(1,1) model, shows future trends in the volatility of Chevron's stock returns.

The model anticipates continuity in the return patterns, the forecasted confidence intervals widen, signaling increased uncertainty about future price volatility.


:::



# 14. Volatility Plot

In this section, we will look at the volatility dynamics of stock price as captured by our final model


::: panel-tabset


## Exxon Mobil


```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


ht <- garch_exxon_final@h.t 
exxon_stockprice_df = data.frame(Exxon_stockprice)
exxon_stockprice_df <- head(exxon_stockprice_df, -1)
exxon_stockprice_df <- data.frame(exxon_stockprice_df,rownames(exxon_stockprice_df))
colnames(exxon_stockprice_df)[7] = "date"
exxon_stockprice_df$date<-as.Date(exxon_stockprice_df$date,"%Y-%m-%d")
data_spot = data.frame(ht,exxon_stockprice_df$date)


ggplot(data_spot, aes(y = ht, x = exxon_stockprice_df.date)) + 
  geom_line(color = "dodgerblue3")  + 
  ylab('Conditional Variance') + 
  xlab('Date') +
  theme_minimal() +
  ggtitle("Volatility plot for Exxon Mobil Stock Price") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

```


In the graph, we observe periods with peaks indicating heightened volatility, esp around 2008-2009 and then after 2020.


## Chevron Corporation

```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true


ht <- garch_chevron_final@h.t 
chevron_stockprice_df = data.frame(Chevron_stockprice)
chevron_stockprice_df <- head(chevron_stockprice_df, -1)
chevron_stockprice_df <- data.frame(chevron_stockprice_df,rownames(chevron_stockprice_df))
colnames(chevron_stockprice_df)[7] = "date"
chevron_stockprice_df$date<-as.Date(chevron_stockprice_df$date,"%Y-%m-%d")
data_spot = data.frame(ht,chevron_stockprice_df$date)


ggplot(data_spot, aes(y = ht, x = chevron_stockprice_df.date)) +
  geom_line(color = "dodgerblue3") +
  ylab('Conditional Variance') +
  xlab('Date') +
  theme_minimal() +
  ggtitle("Volatility plot for Chevron Corporation Stock Price") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))


```



In the graph, we observe periods with peaks indicating heightened volatility, esp around 2008-2009 and a significant spike after 2020.






:::



# 15. Model Equations

Finally the model equation based on the best model


::: panel-tabset


## Exxon Mobil

The best performing model was ARIMA(1,0,1) + GARCH(1,1). The model equation is as follows:


**ARIMA(1,0,1)** equation:

$$
(1 - \phi_{B})Y_{t} = (1 + \phi_{B})\epsilon_{t}
$$




**GARCH(1,1)** equation:


$$
\sigma_{t}^{2} = \alpha_{0} + \alpha_{1}\epsilon^{2}_{t-1}+\beta_{1}\sigma^{2}_{t-1}
$$






## Chevron Corporation


The best performing model was ARIMA(0,0,1) + GARCH(1,1). The model equation is as follows:



**ARIMA(0,0,1)** equation:

$$
Y_t = \theta_1 \epsilon_{t-1} + \epsilon_t
$$





**GARCH(1,1)** equation:


$$
\sigma_{t}^{2} = \alpha_{0} + \alpha_{1}\epsilon^{2}_{t-1}+\beta_{1}\sigma^{2}_{t-1}
$$



:::




<a href="multivariate-ts-models.qmd" class="previous-page-link" style="float: left;">&larr; Previous Page: Multivariate</a>



<a href="deep-learning-ts.qmd" class="next-page-link" style="float: right;">Next Page: Deep Learning &rarr;</a>





