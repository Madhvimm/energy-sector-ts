theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_electricity_prices_interactive <- ggplotly(p_electricity_prices)
p_electricity_prices_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(gdp_data)
View(gdp_data)
#| code-fold: true
#| code-summary: 'convert to ts'
#| warning: false
#| output: false
# For Crude Oil
composite_crude_oil_prices$Date <- as.Date(composite_crude_oil_prices$Date)
crude_oil_prices <- composite_crude_oil_prices[c( "Date","Value", "Description", "Unit")]
# For Natural Gas
citygate_gas_prices$Date <- as.Date(citygate_gas_prices$Date)
natural_gas_prices <- citygate_gas_prices[c( "Date","Value", "Description", "Unit")]
# For Electricity
total_electricity_prices$Date <- as.Date(total_electricity_prices$Date, format = "%Y-%m-%d")
electricity_prices <- total_electricity_prices[c( "Date","Value", "Description", "Unit")]
# For GDP (it's quarterly)
gdp_data$DATE <- as.Date(gdp_data$DATE, format = "%Y-%m-%d")
electricity_prices <- total_electricity_prices[c( "DATE","GDP")]
#| code-fold: true
#| code-summary: 'convert to ts'
#| warning: false
#| output: false
# For Crude Oil
composite_crude_oil_prices$Date <- as.Date(composite_crude_oil_prices$Date)
crude_oil_prices <- composite_crude_oil_prices[c( "Date","Value", "Description", "Unit")]
# For Natural Gas
citygate_gas_prices$Date <- as.Date(citygate_gas_prices$Date)
natural_gas_prices <- citygate_gas_prices[c( "Date","Value", "Description", "Unit")]
# For Electricity
total_electricity_prices$Date <- as.Date(total_electricity_prices$Date, format = "%Y-%m-%d")
electricity_prices <- total_electricity_prices[c( "Date","Value", "Description", "Unit")]
# For GDP (it's quarterly)
gdp_data$DATE <- as.Date(gdp_data$DATE, format = "%Y-%m-%d")
gdp_data <- gdp_data[c( "DATE","GDP")]
# For CPI (it's monthly)
cpi_data$DATE <- as.Date(cpi_data$DATE, format = "%Y-%m-%d")
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(gdp_data)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_gdp_data <- ggplot(gdp_data, aes(x = Date, y = Value)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "Cost of Natural Gas Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_gdp_data_interactive <- ggplotly(p_gdp_data)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_gdp_data <- ggplot(gdp_data, aes(x = DATE, y = GDP)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "Cost of Natural Gas Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_gdp_data_interactive <- ggplotly(p_gdp_data)
p_gdp_data_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_gdp_data <- ggplot(gdp_data, aes(x = DATE, y = GDP)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "GDP Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_gdp_data_interactive <- ggplotly(p_gdp_data)
p_gdp_data_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(gdp_data)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(cpi_data)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_cpi_data <- ggplot(cpi_data, aes(x = DATE, y = CPIAUCSL)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "Cost of Natural Gas Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_cpi_data_interactive <- ggplotly(p_cpi_data)
p_cpi_data_interactive
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
library(gridExtra)
library(zoo)
library(astsa)
library(ggplot2)
library(zoo)
library(plotly)
#| code-fold: true
#| code-summary: 'Read data'
#| warning: false
#| output: false
composite_crude_oil_prices <- read.csv("data/composite_crude_oil_prices.csv")
citygate_gas_prices <- read.csv("data/citygate_gas_prices.csv")
total_electricity_prices <- read.csv("data/total_electricity_prices.csv")
gdp_data <- read.csv("data/gdp_data.csv")
cpi_data <- read.csv("data/cpi_data.csv")
#| code-fold: true
#| code-summary: 'convert to ts'
#| warning: false
#| output: false
# For Crude Oil
composite_crude_oil_prices$Date <- as.Date(composite_crude_oil_prices$Date)
crude_oil_prices <- composite_crude_oil_prices[c( "Date","Value", "Description", "Unit")]
# For Natural Gas
citygate_gas_prices$Date <- as.Date(citygate_gas_prices$Date)
natural_gas_prices <- citygate_gas_prices[c( "Date","Value", "Description", "Unit")]
# For Electricity
total_electricity_prices$Date <- as.Date(total_electricity_prices$Date, format = "%Y-%m-%d")
electricity_prices <- total_electricity_prices[c( "Date","Value", "Description", "Unit")]
# For GDP (it's quarterly)
gdp_data$DATE <- as.Date(gdp_data$DATE, format = "%Y-%m-%d")
gdp_data <- gdp_data[c( "DATE","GDP")]
# For CPI (it's monthly)
cpi_data$DATE <- as.Date(cpi_data$DATE, format = "%Y-%m-%d")
#| code-fold: true
#| code-summary: 'Head Crude Oil'
#| warning: false
#| output: true
head(crude_oil_prices)
#| code-fold: true
#| code-summary: 'Plot Crude Oil'
#| warning: false
#| output: true
#Plotting with ggplot2
p_crude_oil_prices <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "Cost of Crude Oil Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_crude_oil_prices_interactive <- ggplotly(p_crude_oil_prices)
p_crude_oil_prices_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(natural_gas_prices)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_natural_gas_prices <- ggplot(natural_gas_prices, aes(x = Date, y = Value)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "Cost of Natural Gas Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_natural_gas_prices_interactive <- ggplotly(p_natural_gas_prices)
p_natural_gas_prices_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(electricity_prices)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_electricity_prices <- ggplot(electricity_prices, aes(x = Date, y = Value)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "Average Prices of Electricity Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_electricity_prices_interactive <- ggplotly(p_electricity_prices)
p_electricity_prices_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(gdp_data)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_gdp_data <- ggplot(gdp_data, aes(x = DATE, y = GDP)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "GDP Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_gdp_data_interactive <- ggplotly(p_gdp_data)
p_gdp_data_interactive
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
head(cpi_data)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_cpi_data <- ggplot(cpi_data, aes(x = DATE, y = CPIAUCSL)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "Cost of Natural Gas Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_cpi_data_interactive <- ggplotly(p_cpi_data)
p_cpi_data_interactive
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
library(gridExtra)
library(zoo)
library(astsa)
library(ggplot2)
library(zoo)
library(plotly)
#| code-fold: true
#| code-summary: 'Read data'
#| warning: false
#| output: false
composite_crude_oil_prices <- read.csv("data/composite_crude_oil_prices.csv")
citygate_gas_prices <- read.csv("data/citygate_gas_prices.csv")
total_electricity_prices <- read.csv("data/total_electricity_prices.csv")
gdp_data <- read.csv("data/gdp_data.csv")
cpi_data <- read.csv("data/cpi_data.csv")
#| code-fold: true
#| code-summary: 'convert to ts'
#| warning: false
#| output: false
# For Crude Oil
composite_crude_oil_prices$Date <- as.Date(composite_crude_oil_prices$Date)
crude_oil_prices <- composite_crude_oil_prices[c( "Date","Value", "Description", "Unit")]
# For Natural Gas
citygate_gas_prices$Date <- as.Date(citygate_gas_prices$Date)
natural_gas_prices <- citygate_gas_prices[c( "Date","Value", "Description", "Unit")]
# For Electricity
total_electricity_prices$Date <- as.Date(total_electricity_prices$Date, format = "%Y-%m-%d")
electricity_prices <- total_electricity_prices[c( "Date","Value", "Description", "Unit")]
# For GDP (it's quarterly)
gdp_data$DATE <- as.Date(gdp_data$DATE, format = "%Y-%m-%d")
gdp_data <- gdp_data[c( "DATE","GDP")]
# For CPI (it's monthly)
cpi_data$DATE <- as.Date(cpi_data$DATE, format = "%Y-%m-%d")
#| code-fold: true
#| code-summary: 'Head Crude Oil'
#| warning: false
#| output: true
head(crude_oil_prices)
#| code-fold: true
#| code-summary: 'Plot Crude Oil'
#| warning: false
#| output: true
#Plotting with ggplot2
p_crude_oil_prices <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "Cost of Crude Oil Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_crude_oil_prices_interactive <- ggplotly(p_crude_oil_prices)
p_crude_oil_prices_interactive
#| code-fold: true
#| code-summary: 'Head Natural Gas'
#| warning: false
#| output: true
head(natural_gas_prices)
#| code-fold: true
#| code-summary: 'Plot Natural Gas'
#| warning: false
#| output: true
#Plotting with ggplot2
p_natural_gas_prices <- ggplot(natural_gas_prices, aes(x = Date, y = Value)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "Cost of Natural Gas Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_natural_gas_prices_interactive <- ggplotly(p_natural_gas_prices)
p_natural_gas_prices_interactive
#| code-fold: true
#| code-summary: 'Head Electricity'
#| warning: false
#| output: true
head(electricity_prices)
#| code-fold: true
#| code-summary: 'Plot Electricity'
#| warning: false
#| output: true
#Plotting with ggplot2
p_electricity_prices <- ggplot(electricity_prices, aes(x = Date, y = Value)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "Average Prices of Electricity Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_electricity_prices_interactive <- ggplotly(p_electricity_prices)
p_electricity_prices_interactive
#| code-fold: true
#| code-summary: 'Head GDP'
#| warning: false
#| output: true
head(gdp_data)
#| code-fold: true
#| code-summary: 'Plot GDP'
#| warning: false
#| output: true
#Plotting with ggplot2
p_gdp_data <- ggplot(gdp_data, aes(x = DATE, y = GDP)) +
geom_line(color = "#99494d") +
theme_minimal() +
labs(title = "GDP Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_gdp_data_interactive <- ggplotly(p_gdp_data)
p_gdp_data_interactive
#| code-fold: true
#| code-summary: 'Head CPI'
#| warning: false
#| output: true
head(cpi_data)
#| code-fold: true
#| code-summary: 'Plot CPI'
#| warning: false
#| output: true
#Plotting with ggplot2
p_cpi_data <- ggplot(cpi_data, aes(x = DATE, y = CPIAUCSL)) +
geom_line(color = "#499995") +
theme_minimal() +
labs(title = "CPI Over Time", x = "Date", y = "Value (USD)")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
p_cpi_data_interactive <- ggplotly(p_cpi_data)
p_cpi_data_interactive
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
library(gridExtra)
library(zoo)
library(astsa)
library(ggplot2)
library(zoo)
library(plotly)
library(quantmod)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Fetching stock data for Exxon Mobil
getSymbols("XOM", from = "2012-10-01", to = "2024-01-01")
xom_stock <- data.frame(Date = index(XOM), XOM.Adjusted = XOM$XOM.Adjusted)
# Plotting Exxon Mobil stock prices
g_xom <- ggplot(xom_stock, aes(x=Date, y=XOM.Adjusted)) +
geom_line(color="#1f77b4") + # Using a predefined color
labs(
title = "Stock Price for Exxon Mobil Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal()
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Fetching stock data for Exxon Mobil
getSymbols("XOM", from = "1984-10-01", to = "2024-01-01")
xom_stock <- data.frame(Date = index(XOM), XOM.Adjusted = XOM$XOM.Adjusted)
# Plotting Exxon Mobil stock prices
g_xom <- ggplot(xom_stock, aes(x=Date, y=XOM.Adjusted)) +
geom_line(color="#1f77b4") + # Using a predefined color
labs(
title = "Stock Price for Exxon Mobil Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal()
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Fetching stock data for Exxon Mobil
getSymbols("XOM", from = "1984-10-01", to = "2024-01-01")
xom_stock <- data.frame(Date = index(XOM), XOM.Adjusted = XOM$XOM.Adjusted)
# Plotting Exxon Mobil stock prices
g_xom <- ggplot(xom_stock, aes(x=Date, y=XOM.Adjusted)) +
geom_line(color="#1f77b4") + # Using a predefined color
labs(
title = "Stock Price for Exxon Mobil Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal()
p_xom
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Fetching stock data for Exxon Mobil
getSymbols("XOM", from = "1984-10-01", to = "2024-01-01")
xom_stock <- data.frame(Date = index(XOM), XOM.Adjusted = XOM$XOM.Adjusted)
# Plotting Exxon Mobil stock prices
g_xom <- ggplot(xom_stock, aes(x=Date, y=XOM.Adjusted)) +
geom_line(color="#1f77b4") + # Using a predefined color
labs(
title = "Stock Price for Exxon Mobil Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal()
# Convert ggplot objects to plotly objects for interactivity
p_xom <- ggplotly(g_xom) %>% layout(hovermode = "x")
p_xom
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
#Fetching stock data for Exxon Mobil
exxon_data <- getSymbols("XOM", from = "1984-10-01", to = "2024-01-01", auto.assign = TRUE)
xom_stock <- data.frame(Date = index(XOM), XOM.Adjusted = XOM$XOM.Adjusted)
#Plotting Exxon Mobil stock prices
g_xom <- ggplot(xom_stock, aes(x=Date, y=XOM.Adjusted)) +
geom_line(color="#1f77b4") +
labs(
title = "Stock Price for Exxon Mobil Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal()
# Convert ggplot objects to plotly objects for interactivity
p_xom <- ggplotly(g_xom) %>% layout(hovermode = "x")
p_xom
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
#Fetching stock data for Exxon Mobil
exxon_data <- getSymbols("XOM", from = "1984-10-01", to = "2024-01-01", auto.assign = TRUE)
xom_stock <- data.frame(Date = index(XOM), XOM.Adjusted = XOM$XOM.Adjusted)
#Plotting Exxon Mobil stock prices
g_xom <- ggplot(xom_stock, aes(x=Date, y=XOM.Adjusted)) +
geom_line(color="#99494d") +
labs(
title = "Stock Price for Exxon Mobil Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
# Convert ggplot objects to plotly objects for interactivity
p_xom <- ggplotly(g_xom) %>% layout(hovermode = "x")
p_xom
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
#Fetching stock data for Chevron Corporation
chevron_data <- getSymbols("CVX", from = "1984-10-01", to = "2024-01-01", auto.assign = TRUE)
cvx_stock <- data.frame(Date = index(CVX), CVX.Adjusted = CVX$CVX.Adjusted)
#Plotting Chevron Corporation stock prices
g_cvx <- ggplot(cvx_stock, aes(x=Date, y=CVX.Adjusted)) +
geom_line(color="#2e8b57") +
labs(
title = "Stock Price for Chevron Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
# Convert ggplot objects to plotly objects for interactivity
p_cvx <- ggplotly(g_cvx) %>% layout(hovermode = "x")
p_cvx
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
#Fetching stock data for Chevron Corporation
chevron_data <- getSymbols("CVX", from = "1984-10-01", to = "2024-01-01", auto.assign = TRUE)
cvx_stock <- data.frame(Date = index(CVX), CVX.Adjusted = CVX$CVX.Adjusted)
#Plotting Chevron Corporation stock prices
g_cvx <- ggplot(cvx_stock, aes(x=Date, y=CVX.Adjusted)) +
geom_line(color="#499995") +
labs(
title = "Stock Price for Chevron Corporation",
x = "Date",
y = "Adjusted Closing Price"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
# Convert ggplot objects to plotly objects for interactivity
p_cvx <- ggplotly(g_cvx) %>% layout(hovermode = "x")
p_cvx
