# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
# Plot the returns
autoplot(returns_xom) + theme_bw() + ggtitle("Exxon Mobil Stock Price Returns")
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
# Plot the returns
autoplot(returns_xom) +
theme_bw() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
# Plot the returns
autoplot(returns_xom, color="#5a3196") +
theme_bw() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
# Plot the returns
autoplot(returns_xom, color="dodgerblue2") +
theme_bw() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
# Plot the returns
autoplot(returns_xom, color="dodgerblue2") +
theme_minimal() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Chevron_ts <- ts(Chevron_stockprice$CVX.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_cvx <- log(Chevron_ts)%>% diff()
knitr::kable(summary(returns_cvx))
# Plot the returns
autoplot(returns_cvx, color="dodgerblue2") +
theme_minimal() +
ggtitle("Chevron Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
# Plot the returns
autoplot(returns_xom, color="dodgerblue3") +
theme_minimal() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Chevron_ts <- ts(Chevron_stockprice$CVX.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_cvx <- log(Chevron_ts)%>% diff()
knitr::kable(summary(returns_cvx))
# Plot the returns
autoplot(returns_cvx, color="dodgerblue3") +
theme_minimal() +
ggtitle("Chevron Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Chevron_ts <- ts(Chevron_stockprice$CVX.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_cvx <- log(Chevron_ts)%>% diff()
knitr::kable(summary(returns_cvx))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the returns
autoplot(returns_cvx, color="dodgerblue3") +
theme_minimal() +
ggtitle("Chevron Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the returns
autoplot(returns_xom, color="dodgerblue3") +
theme_minimal() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Chevron_ts <- ts(Chevron_stockprice$CVX.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_cvx <- log(Chevron_ts)%>% diff()
knitr::kable(summary(returns_cvx))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the returns
autoplot(returns_cvx, color="dodgerblue3") +
theme_minimal() +
ggtitle("Chevron Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Crude Oil
crude_oil_acf <- ggAcf(returns_xom) +
ggtitle("ACF Plot for ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Crude Oil
crude_oil_acf <- ggAcf(returns_xom) +
ggtitle("ACF Plot for ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
crude_oil_acf
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Crude Oil
crude_oil_acf <- ggAcf(returns_xom) +
ggtitle("ACF Plot for ") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
crude_oil_acf
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Crude Oil
crude_oil_acf <- ggAcf(returns_xom,40) +
ggtitle("ACF Plot for ") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
crude_oil_acf
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Crude Oil
Exxon_acf <- ggAcf(returns_xom,40) +
ggtitle("ACF Plot for ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
Exxon_acf <- ggAcf(returns_xom,40) +
ggtitle("ACF Plot for ") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
Exxon_acf
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Exxon Mobil Stock
Exxon_acf <- ggAcf(returns_xom,40) +
ggtitle("ACF Plot for ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#PACF Plot for Exxon Mobil Stock
Exxon_pacf <- ggPacf(returns_xom,40) +
ggtitle("PACF Plot for ") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
grid.arrange(Exxon_acf, Exxon_pacf, nrow = 2)
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Exxon Mobil Stock
Exxon_acf <- ggAcf(returns_xom,40) +
ggtitle("ACF Plot for Exxon Mobil Returns ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#PACF Plot for Exxon Mobil Stock
Exxon_pacf <- ggPacf(returns_xom,40) +
ggtitle("PACF Plot for Exxon Mobil Returns") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
grid.arrange(Exxon_acf, Exxon_pacf, nrow = 2)
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#ACF Plot for Chevron Stock
Chevron_acf <- ggAcf(returns_cvx,40) +
ggtitle("ACF Plot for Chevron Stock Returns ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#PACF Plot for Chevron Stock
Chevron_pacf <- ggPacf(returns_cvx,40) +
ggtitle("PACF Plot for Chevron Stock Returns") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
grid.arrange(Chevron_acf, Chevron_pacf, nrow = 2)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
library(gridExtra)
library(zoo)
library(astsa)
library(ggplot2)
library(zoo)
library(plotly)
library(vars)
library(dplyr)
library(quantmod)
#| code-fold: true
#| code-summary: 'Read data'
#| warning: false
#| output: false
composite_crude_oil_prices <- read.csv("data/composite_crude_oil_prices.csv")
citygate_gas_prices <- read.csv("data/citygate_gas_prices.csv")
total_electricity_prices <- read.csv("data/total_electricity_prices.csv")
gdp_data <- read.csv("data/gdp_data.csv")
cpi_data <- read.csv("data/cpi_data.csv")
#| code-fold: true
#| code-summary: 'convert to ts'
#| warning: false
#| output: false
# For Crude Oil
composite_crude_oil_prices$Date <- as.Date(composite_crude_oil_prices$Date)
start_year <- as.numeric(format(min(composite_crude_oil_prices$Date), "%Y"))
start_month <- as.numeric(format(min(composite_crude_oil_prices$Date), "%m"))
composite_crude_oil_ts <- ts(composite_crude_oil_prices$Value, start=c(start_year, start_month), frequency=12)
# Log-transform Value
composite_crude_oil_prices$LOG_Value <- log(composite_crude_oil_prices$Value)
oil_log_ts <- ts(composite_crude_oil_prices$LOG_Value, start=c(start_year, start_month), frequency=12)
# For Natural Gas
citygate_gas_prices$Date <- as.Date(citygate_gas_prices$Date)
start_year_gas <- as.numeric(format(min(citygate_gas_prices$Date), "%Y"))
start_month_gas <- as.numeric(format(min(citygate_gas_prices$Date), "%m"))
citygate_gas_ts <- ts(citygate_gas_prices$Value, start=c(start_year_gas, start_month_gas), frequency=12)
# Log-transform Value
citygate_gas_prices$LOG_Value <- log(citygate_gas_prices$Value)
gas_log_ts <- ts(citygate_gas_prices$LOG_Value, start=c(start_year_gas, start_month_gas), frequency=12)
# For Electricity
total_electricity_prices$Date <- as.Date(total_electricity_prices$Date, format = "%Y-%m-%d")
start_year_elec <- as.numeric(format(min(total_electricity_prices$Date), "%Y"))
start_month_elec <- as.numeric(format(min(total_electricity_prices$Date), "%m"))
total_electricity_ts <- ts(total_electricity_prices$Value, start = c(start_year_elec, start_month_elec), frequency = 12)
# Log-transform Value
total_electricity_prices$LOG_Value <- log(total_electricity_prices$Value)
electricity_log_ts <- ts(total_electricity_prices$LOG_Value, start=c(start_year_elec, start_month_elec), frequency=12)
# For GDP (it's quarterly)
gdp_data$DATE <- as.Date(gdp_data$DATE, format = "%Y-%m-%d")
start_year_gdp <- as.numeric(format(min(gdp_data$DATE), "%Y"))
start_quarter_gdp <- quarter(min(gdp_data$DATE))
# Log-transform GDP
gdp_data$LOG_GDP <- log(gdp_data$GDP)
gdp_log_ts <- ts(gdp_data$LOG_GDP, start=c(start_year_gdp, start_quarter_gdp), frequency=4)
# For CPI (it's monthly)
cpi_data$DATE <- as.Date(cpi_data$DATE, format = "%Y-%m-%d")
start_year_cpi <- as.numeric(format(min(cpi_data$DATE), "%Y"))
start_month_cpi <- as.numeric(format(min(cpi_data$DATE), "%m"))
# Log-transform CPI
cpi_data$LOG_CPI <- log(cpi_data$CPIAUCSL)
cpi_log_ts <- ts(cpi_data$LOG_CPI, start = c(start_year_cpi, start_month_cpi), frequency = 12)
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
# Retrieve stock price data for Exxon Mobil starting from 1990
Exxon_stockprice <- getSymbols("XOM", auto.assign = FALSE, from = "1990-01-01", src = "yahoo")
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the stock prices
chartSeries(Exxon_stockprice, theme = chartTheme("white"),
bar.type = "hlc",
up.col = "green",
dn.col = "red")
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
# Retrieve stock price data for Chevron Corporation starting from 1990
Chevron_stockprice <- getSymbols("CVX", auto.assign = FALSE, from = "1990-01-01", src = "yahoo")
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the stock prices
chartSeries(Chevron_stockprice, theme = chartTheme("white"),
bar.type = "hlc",
up.col = "green",
dn.col = "red")
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Exxon_ts <- ts(Exxon_stockprice$XOM.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_xom <- log(Exxon_ts)%>% diff()
knitr::kable(summary(returns_xom))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the returns
autoplot(returns_xom, color="dodgerblue3") +
theme_minimal() +
ggtitle("Exxon Mobil Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Convert to a time series object
Chevron_ts <- ts(Chevron_stockprice$CVX.Adjusted, start=decimal_date(as.Date("1990-01-01")), frequency = 365.25)
# Calculate log returns
returns_cvx <- log(Chevron_ts)%>% diff()
knitr::kable(summary(returns_cvx))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
# Plot the returns
autoplot(returns_cvx, color="dodgerblue3") +
theme_minimal() +
ggtitle("Chevron Stock Price Returns") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
#ACF Plot for Exxon Mobil Stock
Exxon_acf <- ggAcf(returns_xom,40) +
ggtitle("ACF Plot for Exxon Mobil Returns ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#PACF Plot for Exxon Mobil Stock
Exxon_pacf <- ggPacf(returns_xom,40) +
ggtitle("PACF Plot for Exxon Mobil Returns") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
grid.arrange(Exxon_acf, Exxon_pacf, nrow = 2)
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: true
#ACF Plot for Chevron Stock
Chevron_acf <- ggAcf(returns_cvx,40) +
ggtitle("ACF Plot for Chevron Stock Returns ") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#PACF Plot for Chevron Stock
Chevron_pacf <- ggPacf(returns_cvx,40) +
ggtitle("PACF Plot for Chevron Stock Returns") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
grid.arrange(Chevron_acf, Chevron_pacf, nrow = 2)
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: 'Code'
#| warning: false
#| output: false
