---
title: ""
---

```{r, warning=FALSE, message=FALSE, echo=FALSE}
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false

library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa) 
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(imputeTS)
library(gridExtra)
library(reticulate)
library(readxl)
library(plotly)
library(ggplot2)
library(dplyr)

```


# Time Series Data Visualization


## Price Patterns of Electricity and Natural Gas

```{r, warning=FALSE, message=FALSE, echo=FALSE}
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false

# Set the working directory
setwd("/Users/madhvimalhotra/Downloads/Spring 2024/Energy Time Series Poject/energy-sector")

# Construct the file path
file_path <- file.path(getwd(), "MER_T09_10_NATURAL GAS PRICES.csv")

# Load the Natural Gas Prices dataset
natural_gas_prices <- read.csv(file_path)


# Filter out invalid months (assuming the same structure as the crude oil prices dataset)
natural_gas_prices <- natural_gas_prices[substr(natural_gas_prices$YYYYMM, 5, 6) <= 12, ]

# Convert YYYYMM to Date format
natural_gas_prices$Date <- as.Date(paste0(substr(natural_gas_prices$YYYYMM, 1, 4), 
                                          substr(natural_gas_prices$YYYYMM, 5, 6), 
                                          "01"), format="%Y%m%d")

# Replace "Not Available" with NA
natural_gas_prices$Value[natural_gas_prices$Value == "Not Available"] <- NA

# Convert the 'Value' column to numeric
natural_gas_prices$Value <- as.numeric(natural_gas_prices$Value)

# Handle NA values by removing rows with NA
natural_gas_prices <- na.omit(natural_gas_prices)

# Filter for 'Natural Gas Price'
citygate_gas_prices <- subset(natural_gas_prices, Description == "Natural Gas Price, Citygate")

# Load the Average Prices Electricity dataset
avg_prices_electricity <- read.csv("MER_T09_08_AVG_PRICES_ELECTRICITY.csv")

# Convert YYYYMM to Date format for the first three datasets
avg_prices_electricity$Date <- as.Date(paste0(substr(avg_prices_electricity$YYYYMM, 1, 4),
                                               substr(avg_prices_electricity$YYYYMM, 5, 6),
                                               "01"), format="%Y%m%d")

# Filter out invalid months if necessary (adjust if the structure is different from the natural gas dataset)
avg_prices_electricity <- avg_prices_electricity[substr(avg_prices_electricity$YYYYMM, 5, 6) <= 12, ]

# Replace "Not Available" with NA
avg_prices_electricity$Value[avg_prices_electricity$Value == "Not Available"] <- NA

# Convert the 'Value' column to numeric
avg_prices_electricity$Value <- as.numeric(avg_prices_electricity$Value)

# Handle NA values by removing rows with NA
avg_prices_electricity <- na.omit(avg_prices_electricity)


total_electricity_prices <- subset(avg_prices_electricity, Description == "Average Price of Electricity to Ultimate Customers, Total")


```


```{r, warning=FALSE, message=FALSE, echo=FALSE}
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false


natural_gas_prices <- citygate_gas_prices %>% 
  mutate(Type = "Natural Gas", Price = Value) %>%
  select(Date, Type, Price)

avg_prices_electricity <- total_electricity_prices %>% 
  mutate(Type = "Electricity", Price = Value) %>%
  select(Date, Type, Price)

# Combine the datasets
combined_data <- bind_rows( natural_gas_prices, avg_prices_electricity)

# Check for duplicates or any potential issues
combined_data <- combined_data %>% distinct(Date, Type, Price, .keep_all = TRUE)


```




```{r, warning=FALSE, message=FALSE, echo=TRUE}
#| code-fold: true
#| code-summary: 'Visualization'
#| warning: false
#| output: true

## Define custom colors for the two types
colors <- c("Electricity" = "dodgerblue2", "Natural Gas" = "orange3")

p <- plot_ly(data = combined_data, x = ~Date, y = ~Price, color = ~Type, colors = colors, type = 'scatter', mode = 'lines') %>%
  layout(title = "Energy Price Trends Over Time",
         xaxis = list(title = "Date"),
         yaxis = list(title = "Price"))

# To display the plot in your R environment
p

```




The chart presented illustrates the fluctuations in electricity and natural gas prices from the early 1980s. The graph reveals that natural gas prices have experienced significant volatility, characterized by sharp peaks and troughs, suggesting a market responsive to supply, demand, and regulatory changes over the years. Electricity prices, on the other hand, show a more gradual and steady increase over time, with less pronounced volatility but a consistent upward trend.

Understanding these trends is essential for both consumers and policymakers. For consumers, it reflects the changing costs of utilities and can influence decisions around energy usage and conservation. For policymakers and industry stakeholders, the data can inform energy policy, investment in infrastructure, and the development of strategies for price stabilization.



# Tableau Dashboard

## Interactive Crude Oil Prices and the Consumer Price Index (CPI) over time


The interactive visualization below look at the correlation between Crude Oil Prices and the Consumer Price Index (CPI) in the United States. The dashboard traces the trajectory of crude oil prices alongside CPI fluctuations from 1986 to 2023. The dynamic chart enables users to hover over any point in time to reveal detailed data on both crude oil prices and CPI values, providing an understanding of how energy prices impact the overall cost of living. 


<iframe src="https://public.tableau.com/views/CRUDEoil-cpi/oil-CPi?:embed=y&:showVizHome=no" width="100%" height="700" frameborder="0"></iframe>




## Interactive state-wise GDP

The Tableau dashboard below provides an interactive exploration of GDP data for each state in the United States. It features a map that allows you to view the GDP of each state. Additionally, there is a line graph that shows the GDP trends over various years for each state. This dashboard enables users to easily compare and analyze economic trends across different states over time.


<iframe src="https://public.tableau.com/views/ProjectTableau_17115959999840/Dashboard1?:embed=y&:showVizHome=no" width="100%" height="800" frameborder="0"></iframe>









